{"version":3,"sources":["pages/Home/styles.js","pages/Home/index.js","pages/About/styles.js","pages/About/index.js","routes.js","utils/usePersistedState.js","components/Header/styles.js","components/Header/index.js","styles/global.js","styles/themes/light.js","styles/themes/dark.js","App.js","index.js"],"names":["Title","styled","h1","Home","to","About","Routes","props","path","exact","component","usePersistedState","key","initialState","useState","storageValue","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","Container","div","theme","colors","primary","Header","toggleTheme","useContext","ThemeContext","title","onChange","checked","checkedIcon","uncheckedIcon","height","width","handleDiameter","onColor","secondary","createGlobalStyle","background","text","App","light","setTheme","dark","ReactDOM","render","document","getElementById"],"mappings":"sTAEO,IAAMA,EAAQC,IAAOC,GAAV,KCcHC,MAXf,WACC,OACC,oCACC,kBAACH,EAAD,aACA,kBAAC,IAAD,CAAMI,GAAG,UACR,yD,qECRG,IAAMJ,EAAQC,IAAOC,GAAV,KCMHG,MAJf,WACC,OAAO,kBAAC,EAAD,eCYOC,MAXf,SAAgBC,GACf,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWP,IACjC,kBAAC,IAAD,CAAOK,KAAK,SAASE,UAAWL,OCcrBM,MAvBf,SAA2BC,EAAKC,GAAc,MAEnBC,oBAAS,WAClC,IAAMC,EAAeC,aAAaC,QAAQL,GAE1C,OAAIG,EAEIG,KAAKC,MAAMJ,GAGXF,KAVoC,mBAEtCO,EAFsC,KAE/BC,EAF+B,KAoB7C,OALAC,qBAAU,WAETN,aAAaO,QAAQX,EAAKM,KAAKM,UAAUJ,MACvC,CAACR,EAAKQ,IAEF,CAACA,EAAOC,I,+OCpBT,IAAMI,EAAYxB,IAAOyB,IAAV,KAEP,SAACnB,GAAD,OAAWA,EAAMoB,MAAMC,OAAOC,WCqB9BC,MAnBf,YAAkC,IAAhBC,EAAe,EAAfA,YAAe,EACNC,qBAAWC,KAA7BL,EADwB,EACxBA,OAAQM,EADgB,EAChBA,MAChB,OACC,kBAACT,EAAD,mBAEC,kBAAC,IAAD,CACCU,SAAUJ,EACVK,QAAmB,SAAVF,EACTG,aAAa,EACbC,eAAe,EACfC,OAAQ,GACRC,MAAO,GACPC,eAAgB,GAChBC,QAASd,EAAOe,c,6PCjBLC,kBAAf,KAQgB,SAACrC,GAAD,OAAWA,EAAMoB,MAAMC,OAAOiB,cAEnC,SAACtC,GAAD,OAAWA,EAAMoB,MAAMC,OAAOkB,QCZ1B,GACdZ,MAAO,QAEPN,OAAQ,CACPC,QAAS,UACTc,UAAW,UACXE,WAAY,UACZC,KAAM,SCPO,GACdZ,MAAO,OAEPN,OAAQ,CACPC,QAAS,UACTc,UAAW,UACXE,WAAY,OACZC,KAAM,SCsBOC,MAjBf,WAAgB,IAAD,EACYpC,EAAkB,QAASqC,GADvC,mBACPrB,EADO,KACAsB,EADA,KAQd,OACC,kBAAC,IAAD,CAAetB,MAAOA,GACrB,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQI,YARU,WAEnBkB,EAAyB,UAAhBtB,EAAMO,MAAoBgB,EAAOF,MAOzC,kBAAC,EAAD,QCpBHG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2ce7a63d.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1``;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Title } from './styles';\r\n\r\nfunction Home() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Title>Home</Title>\r\n\t\t\t<Link to=\"/about\">\r\n\t\t\t\t<button>Página de Sobre</button>\r\n\t\t\t</Link>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1``;\r\n","import React from 'react';\r\n\r\nimport { Title } from './styles';\r\n\r\nfunction About() {\r\n\treturn <Title>About</Title>;\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home/index';\r\nimport About from './pages/About/index';\r\n\r\nfunction Routes(props) {\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/\" exact component={Home} />\r\n\t\t\t\t<Route path=\"/about\" component={About} />\r\n\t\t\t</Switch>\r\n\t\t</BrowserRouter>\r\n\t);\r\n}\r\n\r\nexport default Routes;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction usePersistedState(key, initialState) {\r\n\t// cria um estado para armazenar o tema usado\r\n\tconst [state, setState] = useState(() => {\r\n\t\tconst storageValue = localStorage.getItem(key);\r\n\t\t// verifica se o valor de um tema pré-escolhido existe\r\n\t\tif (storageValue) {\r\n\t\t\t// se existe, esse tema é retornado\r\n\t\t\treturn JSON.parse(storageValue);\r\n\t\t} else {\r\n\t\t\t// se não, o estado inicial é retornado (light)\r\n\t\t\treturn initialState;\r\n\t\t}\r\n\t});\r\n\r\n\t// useEffect para monitorar a mudança de valor no tema\r\n\tuseEffect(() => {\r\n\t\t// salvando o tema no localStorage\r\n\t\tlocalStorage.setItem(key, JSON.stringify(state));\r\n\t}, [key, state]);\r\n\r\n\treturn [state, setState];\r\n}\r\n\r\nexport default usePersistedState;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\theight: 60px;\r\n\tbackground: ${(props) => props.theme.colors.primary};\r\n\tcolor: white;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tpadding: 0 20px;\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport Switch from 'react-switch';\r\nimport { ThemeContext } from 'styled-components';\r\n\r\nimport { Container } from './styles';\r\n\r\nfunction Header({ toggleTheme }) {\r\n\tconst { colors, title } = useContext(ThemeContext);\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\tHello World\r\n\t\t\t<Switch\r\n\t\t\t\tonChange={toggleTheme}\r\n\t\t\t\tchecked={title === 'dark'}\r\n\t\t\t\tcheckedIcon={false}\r\n\t\t\t\tuncheckedIcon={false}\r\n\t\t\t\theight={10}\r\n\t\t\t\twidth={40}\r\n\t\t\t\thandleDiameter={20}\r\n\t\t\t\tonColor={colors.secondary}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n\t* {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\tbody {\r\n\t\tbackground: ${(props) => props.theme.colors.background};\r\n\t\tfont-size: 14px;\r\n\t\tcolor: ${(props) => props.theme.colors.text};\r\n\t\tfont-family: sans-serif;\r\n\t}\r\n`;\r\n","export default {\r\n\ttitle: 'light',\r\n\r\n\tcolors: {\r\n\t\tprimary: '#457b9d',\r\n\t\tsecondary: '#a8dadc',\r\n\t\tbackground: '#f1faee',\r\n\t\ttext: '#333',\r\n\t},\r\n};\r\n","export default {\r\n\ttitle: 'dark',\r\n\r\n\tcolors: {\r\n\t\tprimary: '#1d3557',\r\n\t\tsecondary: '#457b9d',\r\n\t\tbackground: '#333',\r\n\t\ttext: '#FFF',\r\n\t},\r\n};\r\n","import React from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport Routes from './routes';\r\n\r\nimport usePersistedState from './utils/usePersistedState';\r\n\r\nimport Header from './components/Header';\r\n\r\nimport GlobalStyle from './styles/global';\r\nimport light from './styles/themes/light';\r\nimport dark from './styles/themes/dark';\r\n\r\nfunction App() {\r\n\tconst [theme, setTheme] = usePersistedState('theme', light);\r\n\r\n\tconst toggleTheme = () => {\r\n\t\t// se o tema utilizado por light, troca para o dark, se for light mantém\r\n\t\tsetTheme(theme.title === 'light' ? dark : light);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<GlobalStyle />\r\n\t\t\t<Header toggleTheme={toggleTheme} />\r\n\t\t\t<Routes />\r\n\t\t</ThemeProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}